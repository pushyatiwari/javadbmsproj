package Aud;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Time;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author LENOVO
 */
public class ModifyEvents extends javax.swing.JFrame {
    int evntid;

    /**
     * Creates new form ModifyEvents
     */
    
     Connection myConn = null;
        Statement myStmt = null;
        ResultSet myRs = null;
        PreparedStatement preparedStatement;
    /**
     * Creates new form BookAuditorium
     */
   void getConnectiondb() throws SQLException, ClassNotFoundException{
        // TODO code application logic here
       
      String user = "root";
      String pass = "test";

      myConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/aud_jdbms", user, pass);
       

       
    }
    
    
    public ModifyEvents() {
        initComponents();
        //[20,27,93]   
        getContentPane().setBackground(new java.awt.Color(20, 27, 93));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        modifyevent = new javax.swing.JRadioButton();
        eventname = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        starttime = new javax.swing.JLabel();
        endtime = new javax.swing.JLabel();
        starttimeval = new javax.swing.JTextField();
        endtimeval = new javax.swing.JTextField();
        save = new javax.swing.JButton();
        deleteevent = new javax.swing.JRadioButton();
        eventname2 = new javax.swing.JLabel();
        eventname2val = new javax.swing.JTextField();
        delete = new javax.swing.JButton();
        back = new javax.swing.JButton();
        eventname_val = new javax.swing.JComboBox<>();
        dateval = new com.toedter.calendar.JDateChooser();
        eventid = new javax.swing.JTextField();
        eventname1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        modifyevent.setFont(new java.awt.Font("DejaVu Serif", 1, 48)); // NOI18N
        modifyevent.setForeground(new java.awt.Color(39, 229, 217));
        modifyevent.setText("MODIFY EVENT");
        modifyevent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyeventActionPerformed(evt);
            }
        });

        eventname.setFont(new java.awt.Font("DejaVu Serif Condensed", 3, 24)); // NOI18N
        eventname.setForeground(new java.awt.Color(39, 229, 217));
        eventname.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        eventname.setText("Event Name");

        date.setFont(new java.awt.Font("DejaVu Serif Condensed", 3, 24)); // NOI18N
        date.setForeground(new java.awt.Color(39, 229, 217));
        date.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        date.setText("Date");

        starttime.setFont(new java.awt.Font("DejaVu Serif Condensed", 3, 24)); // NOI18N
        starttime.setForeground(new java.awt.Color(39, 229, 217));
        starttime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        starttime.setText("Start Time ");

        endtime.setFont(new java.awt.Font("DejaVu Serif Condensed", 3, 24)); // NOI18N
        endtime.setForeground(new java.awt.Color(39, 229, 217));
        endtime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        endtime.setText("End Time");

        save.setFont(new java.awt.Font("DejaVu Serif Condensed", 3, 24)); // NOI18N
        save.setForeground(new java.awt.Color(39, 229, 217));
        save.setText("SAVE");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        deleteevent.setFont(new java.awt.Font("DejaVu Serif", 1, 48)); // NOI18N
        deleteevent.setForeground(new java.awt.Color(39, 229, 217));
        deleteevent.setText("DELETE EVENT");
        deleteevent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteeventActionPerformed(evt);
            }
        });

        eventname2.setFont(new java.awt.Font("DejaVu Serif Condensed", 3, 24)); // NOI18N
        eventname2.setForeground(new java.awt.Color(39, 229, 217));
        eventname2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        eventname2.setText("Event Name");

        eventname2val.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventname2valActionPerformed(evt);
            }
        });

        delete.setFont(new java.awt.Font("DejaVu Serif Condensed", 3, 24)); // NOI18N
        delete.setForeground(new java.awt.Color(39, 229, 217));
        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        back.setFont(new java.awt.Font("DejaVu Serif Condensed", 3, 24)); // NOI18N
        back.setForeground(new java.awt.Color(39, 229, 217));
        back.setText("BACK");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        eventname_val.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventname_valActionPerformed(evt);
            }
        });

        eventname1.setFont(new java.awt.Font("DejaVu Serif Condensed", 3, 24)); // NOI18N
        eventname1.setForeground(new java.awt.Color(39, 229, 217));
        eventname1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        eventname1.setText("Event ID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(starttime, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                                .addComponent(endtime, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                                .addComponent(eventname, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(eventname1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(starttimeval)
                            .addComponent(endtimeval)
                            .addComponent(dateval, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                            .addComponent(eventname_val, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(eventid)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(modifyevent, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(deleteevent, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(eventname2, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95)
                        .addComponent(eventname2val, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 313, Short.MAX_VALUE)
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79))))
            .addGroup(layout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(modifyevent)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eventname_val, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eventname, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eventid, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eventname1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dateval, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(starttimeval, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(starttime, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(endtimeval, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endtime, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(deleteevent, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eventname2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eventname2val))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        String event_id;
        event_id = eventname2val.getText();
        
          try {
             getConnectiondb();
             String sql = "Delete from Events where Event_ID = ?";
            PreparedStatement pst = myConn.prepareStatement(sql);
   pst.setString(1, event_id);
         } catch (SQLException ex) {
             Logger.getLogger(ModifyAuditorium.class.getName()).log(Level.SEVERE, null, ex);
         } catch (ClassNotFoundException ex) {
             Logger.getLogger(ModifyAuditorium.class.getName()).log(Level.SEVERE, null, ex);
         }
        
        
        
    }//GEN-LAST:event_deleteActionPerformed

    private void deleteeventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteeventActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteeventActionPerformed

    private void eventname2valActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventname2valActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eventname2valActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
       new BookAuditorium().setVisible(true);
           this.setVisible(false);  // TODO add your handling code here:
    }//GEN-LAST:event_backActionPerformed

    private void eventname_valActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventname_valActionPerformed
        // TODO add your handling code here:
        try {
             getConnectiondb();
             
                String sel = eventname_val.getSelectedItem().toString();
                System.out.println("Aud.ModifyEvents.eventname_valActionPerformed()"+sel);
             String sql = ("SELECT * FROM Events where Event_Name = '"+sel+"'");
             Statement st = myConn.createStatement();

ResultSet rs = st.executeQuery(sql);
        while(rs.next())
        {
Date str1 = rs.getDate("Date");
 Time stTime = rs.getTime("StartTime");
 Time etTime = rs.getTime("EndTime");
   evntid = rs.getInt("Event_ID");
 
    dateval.setDate(str1);
    starttimeval.setText(" "+stTime);
      endtimeval.setText(" "+etTime);
      eventid.setText(" "+evntid);
        }
    


 
         } catch (SQLException ex) {
             Logger.getLogger(ModifyEvents.class.getName()).log(Level.SEVERE, null, ex);
         } catch (ClassNotFoundException ex) {
             Logger.getLogger(ModifyEvents.class.getName()).log(Level.SEVERE, null, ex);
         }
      
        
          
        
    }//GEN-LAST:event_eventname_valActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
         //int id;
        String eName,sTime = null,eTime = null;
        //id = Integer.parseInt(eventid.getText());
         String sel = eventname_val.getSelectedItem().toString();
        eName = sel;
        sTime = starttimeval.getText();
        eTime = endtimeval.getText();
        
     java.util.Date dateOfEvent = dateval.getDate();
java.sql.Date sqlDateofevnt = new java.sql.Date(dateOfEvent.getTime());     
       
      
        
    DateFormat sdf = new SimpleDateFormat("hh:mm");
      java.util.Date date1 = null;
       java.util.Date date2 = null;
     try {
         date1 = sdf.parse(sTime);
          date2 = sdf.parse(eTime);
     } catch (ParseException ex) {
         Logger.getLogger(BookAuditorium.class.getName()).log(Level.SEVERE, null, ex);
     }
      Time time1 = new Time(date1.getTime());
      Time time2 = new Time(date2.getTime());
        
//        String query = "UPDATE Events SET Event_Name='"+eName+"', Date = "+ sqlDateofevnt+ ", StartTime = "+
//                time1+"EndTime = "+time2+" WHERE Event_ID="+evntid; 
        
        
        
        
        try {
            getConnectiondb();
             String sql = "update Events set Event_Name=? ,Date=?,StartTime= ? ,EndTime= ? where Event_ID=?";
            PreparedStatement pst = myConn.prepareStatement(sql);
   pst.setString(1, eName);
    pst.setDate(2,sqlDateofevnt);
     pst.setTime(3, time1);
      pst.setTime(4,time2);
      pst.setInt(5, evntid);


   pst.execute();
        } catch (SQLException ex) {
            Logger.getLogger(ModifyEvents.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ModifyEvents.class.getName()).log(Level.SEVERE, null, ex);
        }
          System.out.print("done");     
    }//GEN-LAST:event_saveActionPerformed

    private void modifyeventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyeventActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modifyeventActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModifyEvents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModifyEvents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModifyEvents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModifyEvents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ModifyEvents m1 = new ModifyEvents();
                m1.setVisible(true);
               
                
         
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JLabel date;
    private com.toedter.calendar.JDateChooser dateval;
    private javax.swing.JButton delete;
    private javax.swing.JRadioButton deleteevent;
    private javax.swing.JLabel endtime;
    private javax.swing.JTextField endtimeval;
    private javax.swing.JTextField eventid;
    private javax.swing.JLabel eventname;
    private javax.swing.JLabel eventname1;
    private javax.swing.JLabel eventname2;
    private javax.swing.JTextField eventname2val;
    public javax.swing.JComboBox<String> eventname_val;
    private javax.swing.JRadioButton modifyevent;
    private javax.swing.JButton save;
    private javax.swing.JLabel starttime;
    private javax.swing.JTextField starttimeval;
    // End of variables declaration//GEN-END:variables
}
